const fs = require('fs');
const path = require('path');

console.log('üîß Desabilitando Redis devido a problemas de permiss√£o...\n');

// Verificar se existe arquivo .env
const envFile = path.join(__dirname, '..', '.env');
if (fs.existsSync(envFile)) {
  console.log('‚úÖ Arquivo .env encontrado');
  
  let envContent = fs.readFileSync(envFile, 'utf8');
  
  // Verificar se j√° existe a configura√ß√£o para desabilitar Redis
  if (envContent.includes('DISABLE_REDIS=true')) {
    console.log('‚úÖ Redis j√° est√° desabilitado via DISABLE_REDIS=true');
  } else {
    // Adicionar configura√ß√£o para desabilitar Redis
    envContent += '\n# Desabilitar Redis devido a problemas de permiss√£o\nDISABLE_REDIS=true\n';
    
    fs.writeFileSync(envFile, envContent);
    console.log('‚úÖ Adicionado DISABLE_REDIS=true ao .env');
  }
  
  // Verificar vari√°veis do Upstash
  const upstashVars = [
    'UPSTASH_REDIS_REST_URL',
    'UPSTASH_REDIS_REST_TOKEN'
  ];
  
  console.log('\nüìã Status das vari√°veis do Upstash:');
  upstashVars.forEach(varName => {
    if (envContent.includes(varName)) {
      console.log(`‚úÖ ${varName} est√° definida`);
    } else {
      console.log(`‚ùå ${varName} N√ÉO est√° definida`);
    }
  });
  
} else {
  console.log('‚ùå Arquivo .env n√£o encontrado');
}

console.log('\nüîß Solu√ß√µes para problemas de Redis:');
console.log('1. Verifique as permiss√µes do usu√°rio no Upstash');
console.log('2. Configure as vari√°veis UPSTASH_REDIS_REST_URL e UPSTASH_REDIS_REST_TOKEN');
console.log('3. Ou use apenas o rate limiting in-memory (j√° configurado)');

console.log('\nüìù Para reabilitar o Redis posteriormente:');
console.log('1. Remova DISABLE_REDIS=true do arquivo .env');
console.log('2. Configure as permiss√µes corretas no Upstash');
console.log('3. Reinicie a aplica√ß√£o');

console.log('\nüöÄ A aplica√ß√£o agora usar√° apenas rate limiting in-memory');
console.log('Isso deve resolver os problemas de performance e carregamento'); 